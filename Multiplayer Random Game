/**
Name: Lawrence Bugaoan
Due Date: 10/30/2016
ITI 201-{Section Number 02} Introduction to Computer Concepts
Homework: Week 8 {Individual} Assignment 5 Multiplayer Random Number Game
Description: Create a program that will pick a random number, collect guess from user, 
compare the guess to the random number, creates an output if the guess is too low, too high, or correct.
Program will repeat until the user guess the right number, and prompts the user if they wants to play again
and resets the random number.
 */

import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;
import java.util.ArrayList;

public class multiplayer_random_number_game {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		randGame(); // calls randGame() method
	}

	/**
	 * method that creates a the random number game. 
	 */
	public static void randGame(){
		int x = 0;
		int y = 0;
		int randomizer = 0;
		int choice = 0;
		int guess = 0;
		boolean game = true;
		boolean iterator = false; 
		int[] competitors = new int[0]; 
		boolean gameOn = true; //all players captured their random number
		ArrayList<Integer> guesses = new ArrayList<Integer>(); //creates an ArrayList to catch the guesses and keep them inside the array list.
		ArrayList<Integer> numGuess = new ArrayList<Integer>();
		//boolean correct = true;


		competitors = createPlayer(); 
		System.out.println(competitors.length);


		for(int i = 0;i < competitors.length; i++){
			x = minNumber(x); //calls minNumber() method and takes variable x
			y = maxNumber(y); //calls maxNumber() method and takes variable y

			randomizer = generator(x,y); //calls generator() method and takes variables x and y
			competitors[i] = randomizer;
			randomizer = competitors[i];
			System.out.println("Player # " + (i+1) + "'s random number is generated!"); 
			System.out.println(Arrays.toString(competitors));
			//has to loop to ask player number 2 for random number
		}
		
		while(gameOn == true){
			guess = collectGuess(x,y); //calls collectGuess() method and takes two variables, x and y
			//compareNum(guess, randomizer); //calls compareNum() method and takes two variables, guess and randomizer
			guesses.add(guess); //adds guess into the array list
			int i = 0;
			if(guess == competitors[i]){
				System.out.println("Player # " + (i+1) + " You're right!"); //checks if guess is equal than random number
				//System.out.println(Arrays.toString(competitors)); //Got from StackOverflow
				System.out.println(guesses);
				gameOn = false;
				i++;
			}else if(guess < competitors[i]){
				System.out.println("Player # " + (i+1) + ": Too Low!");
				numGuess.add(1);
				gameOn = true;
				i++;
			}else if(guess > competitors[i]){
				System.out.println("Player # " + (i+1) + ": Too High!");
				numGuess.add(1);
				gameOn = true;
				i++;

			}
			
		}

			/*
			do{ 
				for(int i =0; i < competitors.length; i++){
					System.out.println(competitors[i]);
					if(guess != randomizer){
						while (gameOn == true){
							guess = collectGuess(x,y); //calls collectGuess() method and takes two variables, x and y
							//compareNum(guess, randomizer); //calls compareNum() method and takes two variables, guess and randomizer
							guesses.add(guess); //adds guess into the array list
							if(guess == competitors[i]){
								System.out.println("Player # " + (i+1) + " You're right!"); //checks if guess is equal than random number
								//System.out.println(Arrays.toString(competitors)); //Got from StackOverflow
								System.out.println(guesses);
								gameOn = false;
							}else if(guess < competitors[i]){
								System.out.println("Player # " + (i+1) + ": Too Low!");
								numGuess.add(1);
								gameOn = true;
							}else if(guess > competitors[i]){
								System.out.println("Player # " + (i+1) + ": Too High!");
								numGuess.add(1);
								gameOn = true;

								iterator = true;
							}else if(guess == randomizer)
								iterator = false;


						}
					}}}while (iterator == true);*/


		
		int sizeOfArrayList = guesses.size();

		System.out.println("Here are your number of guesses: " + sizeOfArrayList);

		System.out.println("Here are your guesses:");
		System.out.println(guesses); //prints the guesses inside the arraylist


		choice = prompt(choice); //calls prompt() method and takes variable choice

	}
	/**
	 * method that compares the guess and the random number
	 * method also takes two parameters namely:
	 * @param guess
	 * @param randNum
	 */
	public static void compareNum(int guess,int randNum){


		if(guess < randNum)
			System.out.println("Too Low! Try again!");
		else if(guess > randNum) //checks if guess is less than random number
			System.out.println("Too High! Try again!");
		else	
			System.out.println("You're right!"); //checks if guess is equal than random number


	}
	/**
	 * method that collects two variables:
	 * @param low (minimum number)
	 * @param high (maximum number)
	 * @return guess
	 */
	public static int collectGuess(int low, int high){

		Scanner i = new Scanner(System.in);

		int guess = 0;
		boolean inputError = false;
		//int[] competitors = new int[0]; 
		do{
			try{
				//for(int k = 0; k < competitors.length; k++){
				System.out.print("Enter your guess: "); //asks user for input
				String userInput = i.nextLine(); 
				guess = Integer.parseInt(userInput);//creates a cast that changes String into int
				inputError = false;

			}catch (Exception e){
				System.out.println("Invalid input! Please enter another value!");
				inputError = true;
			}
		} while (inputError == true);

		return guess;
	}
	/**
	 * method that ask the user for minimum number for the Random number
	 * @param min
	 * @return minimum
	 */
	public static int minNumber(int min){
		Scanner keyboard = new Scanner(System.in);

		int minimum = 0;
		boolean inputError = false;
		do{
			try{
				System.out.print("Enter a minimum number: "); //asks the user for minimum number
				String usrInput = keyboard.nextLine();
				minimum = Integer.parseInt(usrInput); //creates a cast that changes String into int
				inputError = false;
			}catch (Exception e){
				System.out.println("Invalid input! Please enter another value.");
				inputError = true;
			}
		}while (inputError == true);

		return minimum;
	}
	/**
	 * method that creates a maximum number for the random number
	 * @param maximum
	 * @return max
	 */
	public static int maxNumber(int maximum) {
		Scanner typer = new Scanner(System.in);
		int max = 0;
		boolean inputError = false;

		do{
			try{
				System.out.print("Enter a maximum number: ");//asks the user for maximum number
				String user = typer.nextLine();

				max = Integer.parseInt(user);//creates a cast that changes String into int
				inputError = false;
			}catch (Exception e){
				System.out.println("Invalid input! Please enter another value");
				inputError = true;
			}
		}while (inputError == true);
		return max;
	}
	/**
	 * method that creates the random number from the user input minimum number and maximum number
	 * @param min
	 * @param max
	 * @return generated
	 */
	public static int generator(int min, int max){
		int generated = 0;
		Random random = new Random(); //creates a Random object called random
		generated = random.nextInt((max - min)+ 1) + min; //creates a random number from the given maximum and minimum number. Since random number starts from 0, I added 1 in order to solve that problem

		return generated;
	}
	/**
	 * method that ask the user if he/she still wants to play the game
	 * @param opt
	 * @return option
	 */
	public static int prompt(int opt){
		int option = 0;
		Scanner input = new Scanner(System.in);
		boolean inputError = false;

		do{
			try{
				System.out.println("Do you still want to play the game?");
				System.out.println("Option 1: Yes \nOption 2: No");
				System.out.print("Enter option number: ");
				String user = input.nextLine();
				option = Integer.parseInt(user); //creates a cast that changes String into int
				inputError = false;
			}catch (Exception e){
				System.out.println("Invalid input! Please enter valid input.");
				inputError = true;
			}
		} while ( inputError == true);

		if(option == 1){ //if the user choose option 1
			randGame(); //program will go back to randGame() method and play again
		}else
			System.out.println("Game over - have a nice day!"); //terminates the program and prints this output

		return option;
	}
	/**
	 * Creates a method that returns an array of players
	 * @return
	 */
	public static int[] createPlayer(){
		Scanner i = new Scanner(System.in);	//create variables
		String participants = "";
		int players = 0;
		boolean numPlayer = false;
		int player[] = new int[0];


		//Error handling for entering number of players
		do{
			try{
				System.out.print("How many players: ");
				participants = i.nextLine();
				players = Integer.parseInt(participants);
				player = new int[players];
				//System.out.println(player.length);
				numPlayer = false;
			}
			catch(Exception e){
				System.out.println("Invalid entry! Try again!");
				numPlayer = true;
			}
		}while(numPlayer==true);

		return player;	
	}

	public static int rank(int x){
		int rank = 0;
		System.out.println("hello world!");
		ArrayList<Integer> numGuess = new ArrayList<Integer>();
		int[] places = new int[x];
		if(numGuess.size() < places.length){
			System.out.println("Congratulations! You are in 1st place!");
		}else if(numGuess.size() > places.length){
			System.out.println("Congratulations! You are in nth place!");
		}else
			System.out.println("Congratulations! You are in nth place!");
		
		return rank;
	}
}

